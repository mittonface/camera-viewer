services:
  camera-viewer:
    build: .
    image: camera-viewer:latest
    expose:
      - "8080"
    environment:
      # AWS Configuration
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - BUCKET_NAME=${BUCKET_NAME}
      
      # Authentication
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
      
      # Application Configuration
      - PORT=8080
    
    # Uncomment if you want to use AWS credentials from host
    # volumes:
    #   - ~/.aws:/root/.aws:ro
    
    restart: unless-stopped
    networks:
      - app-network
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt:ro
      - ./data/certbot/www:/var/www/certbot:ro
    depends_on:
      - camera-viewer
    restart: unless-stopped
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  discord-notifier:
    build: ./discord-notifier
    image: discord-notifier:latest
    environment:
      # AWS Configuration (inherits from camera-viewer)
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - BUCKET_NAME=${BUCKET_NAME}
      
      # Discord Configuration
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      
      # Database path inside container
      - NOTIFIER_DB_PATH=/data/discord-notifier.db
    
    volumes:
      # Persist SQLite database
      - ./data/discord-notifier:/data
    
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge